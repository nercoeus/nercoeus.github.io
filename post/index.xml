<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on nercoeus-blog</title>
    <link>https://nercoeus.github.io/post/</link>
    <description>Recent content in Posts on nercoeus-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© nercoeus</copyright>
    <lastBuildDate>Fri, 03 Jun 2022 23:31:48 +0800</lastBuildDate><atom:link href="https://nercoeus.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSAPP_1_计算机系统漫游</title>
      <link>https://nercoeus.github.io/post/csapp_1_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%BC%AB%E6%B8%B8/</link>
      <pubDate>Fri, 03 Jun 2022 23:31:48 +0800</pubDate>
      
      <guid>https://nercoeus.github.io/post/csapp_1_%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%BC%AB%E6%B8%B8/</guid>
      <description>&lt;h2 id=&#34;the-goal-got-this-book-is-to-help-you-underestand-what-happens-and-why-when-you-run-programmer-on-a-system&#34;&gt;The goal got this book is to help you underestand what happens and why when you run programmer on a system.&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>UNP_3_套接字编程简介</title>
      <link>https://nercoeus.github.io/post/unp_3_%E5%A5%97%E6%8E%A5%E5%AD%97%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Tue, 03 Mar 2020 23:31:48 +0800</pubDate>
      
      <guid>https://nercoeus.github.io/post/unp_3_%E5%A5%97%E6%8E%A5%E5%AD%97%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B/</guid>
      <description>&lt;p&gt;套接字编程简介&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go源码阅读_Channel</title>
      <link>https://nercoeus.github.io/post/go%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB_channel/</link>
      <pubDate>Mon, 13 Jan 2020 18:42:22 +0000</pubDate>
      
      <guid>https://nercoeus.github.io/post/go%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB_channel/</guid>
      <description>&lt;p&gt;  最近代码中出现了一个十分诡异的 bug,找了半天才发现原来是因为 channel 的使用不当所导的.channel 有一个特性是读一个有缓冲区且已关闭的 channel 时,会一直返回默认值.可能是 0,&amp;quot;&amp;quot;,或 nil,因为我使用了一个 for{select &amp;lt;-message}直接导致程序无限触发.要想更好的使用 channel 我们需要了解它内部的实现原理,下面就一起看看 channel 的实现.因为网上关于 channel 的文章十分之多,所以这里主要做的还是个人学习总结的为主.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
